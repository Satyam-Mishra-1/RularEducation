// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Class {
  id           String     @id @default(cuid())
  name         String
  subjects     Subject[] // Subjects associated with this class
  extraCourses Course[] // Extra courses associated with this class
  tests        Test[] // Tests associated with this class
  users        User[] // Users associated with this class
  Material     Material[]
}

model Subject {
  id      String @id @default(cuid())
  name    String
  classId String
  class   Class  @relation(fields: [classId], references: [id])

  tests     Test[] // Tests associated with this subject
  users     User[] // Users associated with this subject
  materials Material[] // Materials (roadmaps, video lectures, notes, etc.) for this subject
  // Course    Course?    @relation(fields: [courseId], references: [id])
  courseId  String?
}

model Material {
  id        String  @id @default(cuid())
  title     String
  content   String // Content of the material (text, videos, etc.)
  subject   Subject @relation(fields: [subjectId], references: [id])
  subjectId String
  classId   String
  class     Class   @relation(fields: [classId], references: [id])
}

model User {
  id              String    @id @default(cuid())
  name            String
  email           String    @unique
  password        String
  phonenumber     String    @unique
  role            String    @default("student")
  classes         Class[] // Classes associated with this user
  subjects        Subject[] // Subjects associated with this user
  Course          Course[]
  Test            Test[] // Tests associated with this user
  meetingsAsHost  Meeting[] @relation("host") // Meetings where the user is the host
  meetingsAsGuest Meeting[] @relation("guest") // Meetings where the user is the guest
}

model Meeting {
  id       String  @id @default(cuid())
  host     User    @relation("host", fields: [hostId], references: [id])
  guest    User    @relation("guest", fields: [guestId], references: [id])
  hostId   String
  guestId  String
  status   String
  notes    String?
  duration Int?
  type     String?
  location String?
  dates    Date[]
}

model Date {
  id        String   @id @default(cuid())
  date      DateTime
  meeting   Meeting  @relation(fields: [meetingId], references: [id])
  meetingId String
}

model Course {
  id          String @id @default(cuid())
  name        String
  owner       User   @relation(fields: [userId], references: [id])
  userId      String
  description String
  img         String
  // subjects    Subject[] // Subjects within this course
  class       Class  @relation(fields: [classId], references: [id])
  classId     String
}

model Test {
  id          String   @id @default(cuid())
  description String
  title       String?
  mentorId    String
  assetUrl    String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  owner       User     @relation(fields: [mentorId], references: [id])
  class       Class    @relation(fields: [classId], references: [id])
  classId     String
  subject     Subject  @relation(fields: [subjectId], references: [id])
  subjectId   String
}
