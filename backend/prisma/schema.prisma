// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Class {
  id    String @id @default(cuid())
  name  String
  tests Test[]
}

model Subject {
  id    String @id @default(cuid())
  name  String
  tests Test[]
}

model User {
  id              String    @id @default(cuid())
  name            String
  email           String    @unique
  password        String
  phonenumber     String    @unique
  role            String    @default("student")
  Course          Course[]
  Test            Test[]
  class           Int
  meetingsAsHost  Meeting[] @relation("host") // meetings where the user is the host
  meetingsAsGuest Meeting[] @relation("guest") // meetings where the user is the guest
}

model Meeting {
  id       String  @id @default(cuid())
  host     User    @relation("host", fields: [hostId], references: [id])
  guest    User    @relation("guest", fields: [guestId], references: [id])
  hostId   String
  guestId  String
  status   String
  notes    String?
  duration Int?
  type     String?
  location String?
  dates    Date[]
}

model Date {
  id        String   @id @default(cuid())
  date      DateTime
  meeting   Meeting  @relation(fields: [meetingId], references: [id])
  meetingId String
}

model Course {
  id          String @id @default(cuid())
  name        String
  owner       User   @relation(fields: [userId], references: [id])
  userId      String
  description String
  img         String
}

model Test {
  id          String   @id @default(cuid())
  description String
  title       String?
  mentorId    String
  assetUrl    String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  owner       User     @relation(fields: [mentorId], references: [id])
  class       Class?   @relation(fields: [classId], references: [id])
  classId     String?
  subject     Subject? @relation(fields: [subjectId], references: [id])
  subjectId   String?
}
